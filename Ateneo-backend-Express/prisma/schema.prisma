generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Professor {
  id             String    @id
  firstName      String
  lastName       String
  email          String    @unique
  password       String
  resetPassword  DateTime?
  emailActivated Boolean
  subjects       Subject[]
}

model Student {
  id            String         @id
  firstName     String
  lastName      String
  dni           BigInt         @unique
  email         String?
  phone         String?
  absences      Absence[]
  studentGrades StudentGrade[]
  subjects      Subject[]      @relation("SubjectsStudents")
}

model Class {
  id        String    @id
  date      DateTime
  subject   Subject   @relation(fields: [subjectId], references: [id])
  subjectId String
  absences  Absence[]
}

model Absence {
  id        String  @id
  class     Class   @relation(fields: [classId], references: [id])
  classId   String
  student   Student @relation(fields: [studentId], references: [id])
  studentId String
  justified Boolean
}

model GradeRelationship {
  id             String @id
  weight         Float
  derivedGrade   Grade  @relation("DerivedGrade", fields: [derivedGradeId], references: [id])
  derivedGradeId String
  baseGrade      Grade  @relation("BaseGrade", fields: [baseGradeId], references: [id])
  baseGradeId    String
}

model Subject {
  id           String    @id
  name         String
  academicYear Int
  institution  String
  degree       String
  professor    Professor @relation(fields: [professorId], references: [id])
  professorId  String
  classes      Class[]
  grades       Grade[]
  students     Student[] @relation("SubjectsStudents")
}

model Grade {
  id              String              @id
  name            String
  type            GradeType
  date            DateTime
  description     String              @db.Text
  subject         Subject             @relation(fields: [subjectId], references: [id])
  subjectId       String
  studentGrades   StudentGrade[]
  derivedGradeRel GradeRelationship[] @relation("DerivedGrade")
  baseGradeRel    GradeRelationship[] @relation("BaseGrade")
}

model StudentGrade {
  id        String  @id
  value     Float
  grade     Grade   @relation(fields: [gradeId], references: [id])
  gradeId   String
  student   Student @relation(fields: [studentId], references: [id])
  studentId String
}

enum GradeType {
  Final
  Weighted
  Arithmetic
}
